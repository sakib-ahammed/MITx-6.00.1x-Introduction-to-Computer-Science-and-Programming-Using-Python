PROBLEM 4-1  (2 points possible)
Consider the following Python procedure. Specify its order of growth.

      
def modten(n):
    return n%10
          
    

 O(log(n)) - incorrect
Show Answer Reveal Answer You have used 1 of 1 submissions
PROBLEM 4-2  (2/2 points)
Consider the following Python procedure. Specify its order of growth.

      
def multlist(m, n):
    '''
    m is the multiplication factor
    n is a list.
    '''
    result = []
    for i in range(len(n)):
        result.append(m*n[i])
    return result   
          
    

 O(len(n)) - correct
Show Answer Reveal Answer You have used 1 of 1 submissions
PROBLEM 4-3  (2/2 points)
Consider the following Python procedure. Specify its order of growth.

      
def foo(n):
    if n <= 1:
        return 1
    return foo(n/2) + 1
          
    

 O(log(n)) - correct
Show Answer Reveal Answer You have used 1 of 1 submissions
PROBLEM 4-4  (2/2 points)
Consider the following Python procedure. Specify its order of growth.

      

def recur(n):
    if n <= 0:
        return 1
    else:
        return n*recur(n-1)
        
          
    

 O(n) - correct
Show Answer Reveal Answer You have used 1 of 1 submissions
PROBLEM 4-5  (2/2 points)
Consider the following Python procedure. Specify its order of growth.

      
def baz(n):
    for i in range(n):
        for j in range(n):
            print i,j 
        
          
    

 O(n^2) - correct
Show Answer Reveal Answer You have used 1 of 1 submissions
Show Discussion
